import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";

import { api, type RouterOutputs } from "~/utils/api";
import { NativeAvatar } from "~/components/Avatar";
import dayjs from "dayjs";

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;
  return (
    <div className="flex w-full flex-col gap-4">
      <div className="flex items-center gap-4">
        <NativeAvatar
          alt={user.fullName ?? "UserImage"}
          src={user.profileImageUrl}
          fallbackText={user.fullName?.charAt(0) ?? "U"}
          size="medium"
          borderVariant="circle"
        />
        <p className="text-xl font-bold">{user.fullName}</p>
      </div>

      <input
        type="text"
        placeholder="What's on your mind?"
        className={"rounded border border-slate-400 bg-transparent p-3"}
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = ({ ...props }: PostWithUser) => {
  const data = dayjs(props.post.createdAt).diff(dayjs(), "minute");

  return (
    <div className="flex w-full items-center gap-3 border-b border-slate-400 p-8">
      <NativeAvatar
        alt={props.author?.lastName ?? "UserImage"}
        src={props.author?.profileImageUrl ?? ""}
        fallbackText={props.author?.lastName ?? "U"}
        size="small"
        borderVariant="circle"
      />
      <div className="flex flex-col">
        <p className="text-xl font-bold text-slate-200">
          {`@${props.author.username}`}
        </p>
        <p className="text-lg text-violet-600">{props.post.content}</p>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  const { user, isSignedIn, isLoaded } = useUser();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={"flex h-screen justify-center"}>
        <div
          className={"h-full w-full  border-x border-slate-400  md:max-w-2xl"}
        >
          <div className={"flex justify-center border-b border-slate-400 p-4"}>
            {!isSignedIn && (
              <div className="flex flex-col">
                <SignInButton />
              </div>
            )}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView key={fullPost.post.id} {...fullPost} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
